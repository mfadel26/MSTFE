[{"E:\\arkademy\\mst\\my-app\\src\\index.js":"1","E:\\arkademy\\mst\\my-app\\src\\App.js":"2","E:\\arkademy\\mst\\my-app\\src\\reportWebVitals.js":"3","E:\\arkademy\\mst\\my-app\\src\\screen\\home.js":"4","E:\\arkademy\\mst\\my-app\\src\\screen\\opt_dummy.js":"5","E:\\arkademy\\mst\\my-app\\src\\screen\\login.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1610234832577,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":7403,"mtime":1610233540530,"results":"11","hashOfConfig":"8"},{"size":1151,"mtime":1610216162200,"results":"12","hashOfConfig":"8"},{"size":2769,"mtime":1610234877519,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1jzu7u0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"E:\\arkademy\\mst\\my-app\\src\\index.js",[],["30","31"],"E:\\arkademy\\mst\\my-app\\src\\App.js",["32","33","34","35"],"import './App.css';\nimport  home from './screen/home'\nimport React, { useEffect, useState, useRef } from \"react\";\nimport  {  BrowserRouter as Router, Route,Redirect } from 'react-router-dom'\nimport Login from './screen/login';\n\nfunction App() {\n  \n  return (\n   <Router>\n     <Route exact path ={'/login'} component={Login}/>\n     <Route exact path ={'/home'} component={home}/>\n   </Router>\n    \n  );\n}\n\nexport default App;\n","E:\\arkademy\\mst\\my-app\\src\\reportWebVitals.js",[],"E:\\arkademy\\mst\\my-app\\src\\screen\\home.js",["36","37","38"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {Layout, Menu, Breadcrumb, Input, Space, Row, Col, Table, Button,PageHeader,Descriptions} from \"antd\";\r\nimport {options} from './opt_dummy'\r\nimport \"antd/dist/antd.css\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link, Redirect } from 'react-router-dom'\r\nconst axios = require(\"axios\");\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction Home() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n  const [prov, setProv] = useState(\"\");\r\n  const [kab, setKab] = useState(null);\r\n  const [completeKab, setCompleteKab] = useState(null);\r\n  const [Data, setData] = useState(null);\r\n  const searchInput = useRef(null);\r\n  \r\n  useEffect(async () => {\r\n\r\n    try {\r\n      axios\r\n        .get(\"http://localhost:6969/search-daerah/Nanggroe Aceh Darussalam (NAD)\")\r\n        .then((res) => {\r\n          const dt = res.data.data;\r\n          setData(dt);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  function getColumnSearchProps(dataIndex) {\r\n    return {\r\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n        <div style={{ padding: 6 }}>\r\n          <Input\r\n            ref={searchInput}\r\n            placeholder={`Search ${dataIndex}`}\r\n            value={selectedKeys[0]}\r\n            onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            style={{ width: 170, marginBottom: 8, display: \"block\" }}\r\n          />\r\n          <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}>\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          </Space>\r\n        </div>\r\n      ),\r\n      filterIcon: (filtered) => (\r\n        <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n      ),\r\n      onFilter: (value, record) =>\r\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n      onFilterDropdownVisibleChange: (visible) => {\r\n        if (visible) {\r\n        }\r\n      },\r\n      render: (text) =>\r\n        searchedColumn === dataIndex ? (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n            searchWords={[searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ) : (\r\n          text\r\n        ),\r\n    };\r\n  }\r\n  function handleSearch(selectedKeys, confirm, dataIndex) {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  }\r\n\r\n  function handleReset(clearFilters) {\r\n    clearFilters();\r\n    setSearchText(\"\");\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"No Kode Pos\",\r\n      dataIndex: \"kodepos\",\r\n      key: \"kodepos\",\r\n      width: '15%',\r\n      ...getColumnSearchProps(\"kodepos\"),\r\n    },\r\n    {\r\n      title: \"Kelurahan\",\r\n      dataIndex: \"kelurahan\",\r\n      key: \"kelurahan\",\r\n      width: '40%',\r\n      ...getColumnSearchProps(\"kelurahan\"),\r\n    },\r\n    {\r\n      title: \"Kecamatan\",\r\n      dataIndex: \"kecamatan\",\r\n      key: \"kecamatan\",\r\n      width: '45%',\r\n      ...getColumnSearchProps(\"kecamatan\"),\r\n    },\r\n  ];\r\n  const onChangeProv = (val) => {\r\n    const province = val.target.textContent;\r\n    setProv(val.target.textContent);\r\n    if (province !== \"\") {\r\n      axios\r\n        .get(`http://localhost:6969/search-daerah/${province}`)\r\n        .then((res) => {\r\n          const dt = res.data.data;\r\n          setKab(dt);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const onChangeKab = (val) => {\r\n    const kabupaten = val.target.textContent;\r\n    setProv(val.target.textContent);\r\n    if (kabupaten !== \"\") {\r\n      axios\r\n        .get(`http://localhost:6969/search-daerah/${prov}?kota=${kabupaten}`)\r\n        .then((res) => {\r\n          const dt = res.data.data;\r\n           setData(dt)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (kab !== null) {\r\n      setCompleteKab(kab);\r\n    }\r\n  }, [kab]);\r\n\r\n  const logOut = async()=>{\r\n  localStorage.clear();\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n     \r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\r\n          <Menu.Item key=\"1\"> <Link to='/login'> MST</Link></Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <div className=\"site-page-header-ghost-wrapper\">\r\n    <PageHeader\r\n      ghost={false}\r\n      // onBack={() => window.history.back()}\r\n      title=\"Hello\"\r\n      subTitle=\"\"\r\n      extra={[\r\n        <Button key=\"1\" type=\"primary\" onClick={logOut}>\r\n          <Link to='/login'>Log Out</Link>\r\n        </Button>,\r\n      ]}\r\n    >\r\n      \r\n    </PageHeader>\r\n\r\n  </div>\r\n      <Content style={{ padding: \"0 50px\" }}>\r\n        <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\r\n        <div className=\"site-layout-content\">\r\n        <h2>Filter </h2>\r\n          <Row>\r\n            <Col span={3}>  <h3> Propinsi </h3></Col>\r\n            <Col span={8}>\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={options}\r\n                getOptionLabel={(option) => option.value}\r\n                onChange={(val) => onChangeProv(val)}\r\n                style={{ width: 250, height: 70 }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Provinsi\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={3}>\r\n              <h3> Kabupaten</h3>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Autocomplete\r\n                disabled={completeKab === null ? true : false}\r\n                id=\"combo-box-demo\"\r\n                options={\r\n                  completeKab &&\r\n                  completeKab.filter(\r\n                    (ele, ind) =>\r\n                      ind ===\r\n                      completeKab.findIndex((elem) => elem.nama_kota === ele.nama_kota)\r\n                  )\r\n                }\r\n                getOptionLabel={(option) => option.nama_kota}\r\n                style={{ width: 250, height: 90 }}\r\n                onChange={(val) => onChangeKab(val)}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Kab/Kota\" variant=\"outlined\" size={5} />\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div>\r\n          <h2>Table MST </h2>\r\n          <Table columns={columns} dataSource={Data == null ? [] : Data} />\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}> Created by M.Fadel ©2021 </Footer>\r\n    </Layout>\r\n  );\r\n}\r\nexport default Home;","E:\\arkademy\\mst\\my-app\\src\\screen\\opt_dummy.js",[],"E:\\arkademy\\mst\\my-app\\src\\screen\\login.js",["39","40","41","42","43"],"import React from \"react\";\r\nimport { Form, Input, Layout, Menu, Breadcrumb, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../Asset/login.css\";\r\nconst { Header, Content, Footer } = Layout;\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLogin: false,\r\n      isLoading:false\r\n    };\r\n  }\r\n\r\n  onFinish = (values) => {\r\n    localStorage.setItem(\"validate\", JSON.stringify(values.username));\r\n    if (values.username == \"adminMst\") {\r\n      this.setState({ isLogin: true });\r\n    }\r\n  };\r\n  render() {\r\n    const { isLogin } = this.state;\r\n    if (isLogin == true) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Header>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\r\n            <Menu.Item key=\"1\">Welcome To MST</Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: \"0 90px\", backgroundColor: \"white\" }}>\r\n          <Breadcrumb style={{ margin: \"40px 0\" }}></Breadcrumb>\r\n          <div className=\"site-layout-content\">\r\n            <Form\r\n              name=\"normal_login\"\r\n              className=\"login-forms\"\r\n              initialValues={{ remember: true }}\r\n              onFinish={this.onFinish}>\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Username!\",\r\n                  },\r\n                ]}>\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"Username\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Password!\",\r\n                  },\r\n                ]}>\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  size=\"large\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item></Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                  login        \r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":17,"nodeType":"50","messageId":"51","endLine":3,"endColumn":26},{"ruleId":"48","severity":1,"message":"52","line":3,"column":28,"nodeType":"50","messageId":"51","endLine":3,"endColumn":36},{"ruleId":"48","severity":1,"message":"53","line":3,"column":38,"nodeType":"50","messageId":"51","endLine":3,"endColumn":44},{"ruleId":"48","severity":1,"message":"54","line":4,"column":43,"nodeType":"50","messageId":"51","endLine":4,"endColumn":51},{"ruleId":"48","severity":1,"message":"55","line":2,"column":84,"nodeType":"50","messageId":"51","endLine":2,"endColumn":96},{"ruleId":"48","severity":1,"message":"54","line":9,"column":16,"nodeType":"50","messageId":"51","endLine":9,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":22,"column":13,"nodeType":"58","endLine":34,"endColumn":4},{"ruleId":"48","severity":1,"message":"59","line":2,"column":57,"nodeType":"50","messageId":"51","endLine":2,"endColumn":65},{"ruleId":"48","severity":1,"message":"60","line":5,"column":10,"nodeType":"50","messageId":"51","endLine":5,"endColumn":14},{"ruleId":"48","severity":1,"message":"61","line":7,"column":26,"nodeType":"50","messageId":"51","endLine":7,"endColumn":32},{"ruleId":"62","severity":1,"message":"63","line":19,"column":25,"nodeType":"64","messageId":"65","endLine":19,"endColumn":27},{"ruleId":"62","severity":1,"message":"63","line":25,"column":17,"nodeType":"64","messageId":"65","endLine":25,"endColumn":19},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'Redirect' is defined but never used.","'Descriptions' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Footer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]